/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2015-4-28: 13h:49m
**
*/

var statmp0

var statmp1

var statmp2

var statmp3

var statmp4

var statmp5

function
__patsfun_10__closurerize(env0)
{
  return [function(cenv) { return __patsfun_10(cenv[1]); }, env0];
}


function
__patsfun_13__closurerize(env0, env1, env2, env3)
{
  return [function(cenv) { return __patsfun_13(cenv[1], cenv[2], cenv[3], cenv[4]); }, env0, env1, env2, env3];
}


function
init_0()
{
//
// knd = 0
//
  // __patsflab_init_0
  player_init();
  return/*_void*/;
} // end-of-function


function
_057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_sats__player_get()
{
//
// knd = 0
  var tmpret7
  var tmp8
  var tmp9
  var tmp11
  var tmp12
  var tmp14
//
  // __patsflab_player_get
  tmp9 = ats2jspre_ref_get_elt(statmp0);
  tmp8 = ats2jspre_gt_int0_int0(tmp9, 0);
  if(tmp8) {
    tmp12 = ats2jspre_ref_get_elt(statmp0);
    tmp11 = ats2jspre_sub_int0_int0(tmp12, 1);
    ats2jspre_ref_set_elt(statmp0, tmp11);
    tmp14 = ats2jspre_ref_get_elt(statmp0);
    update_lives(tmp14);
    tmpret7 = [1];
  } else {
    gameover();
    tmpret7 = null;
  } // endif
  return tmpret7;
} // end-of-function


function
enemy_get(arg0)
{
//
// knd = 0
  var tmpret16
  var tmp18
  var tmp19
  var tmp20
  var tmp21
  var tmp23
  var tmp24
//
  // __patsflab_enemy_get
  tmp19 = ats2jspre_ref_get_elt(statmp4);
  tmp18 = ats2jspre_sub_int0_int0(tmp19, arg0);
  ats2jspre_ref_set_elt(statmp4, tmp18);
  tmp21 = ats2jspre_ref_get_elt(statmp4);
  tmp20 = ats2jspre_lte_int0_int0(tmp21, 0);
  if(tmp20) {
    tmp24 = ats2jspre_ref_get_elt(statmp4);
    tmp23 = ats2jspre_add_int0_int0(tmp24, 800);
    ats2jspre_ref_set_elt(statmp4, tmp23);
    tmpret16 = [1];
  } else {
    tmpret16 = null;
  } // endif
  return tmpret16;
} // end-of-function


function
enemy_move_get(arg0)
{
//
// knd = 0
  var tmpret25
  var tmp27
  var tmp28
  var tmp29
  var tmp30
  var tmp32
  var tmp33
//
  // __patsflab_enemy_move_get
  tmp28 = ats2jspre_ref_get_elt(statmp5);
  tmp27 = ats2jspre_sub_int0_int0(tmp28, arg0);
  ats2jspre_ref_set_elt(statmp5, tmp27);
  tmp30 = ats2jspre_ref_get_elt(statmp5);
  tmp29 = ats2jspre_lte_int0_int0(tmp30, 0);
  if(tmp29) {
    tmp33 = ats2jspre_ref_get_elt(statmp5);
    tmp32 = ats2jspre_add_int0_int0(tmp33, 10);
    ats2jspre_ref_set_elt(statmp5, tmp32);
    tmpret25 = [1];
  } else {
    tmpret25 = null;
  } // endif
  return tmpret25;
} // end-of-function


function
player_keyPress()
{
//
// knd = 0
  var tmp37
  var tmp38
  var tmp39
  var tmp41
  var tmp42
  var tmp44
  var tmp45
  var tmp46
  var tmp47
  var tmp48
//
  // __patsflab_player_keyPress
  tmp38 = check_key(37);
  tmp37 = ats2jspre_eq_int0_int0(tmp38, 1);
  if(tmp37) {
    tmp39 = ats2jspre_neg_double(20.000000000000000000);
    player_move(tmp39, 0.0);
  } else {
    // ATSINSmove_void
  } // endif
  tmp42 = check_key(39);
  tmp41 = ats2jspre_eq_int0_int0(tmp42, 1);
  if(tmp41) {
    player_move(20.000000000000000000, 0.0);
  } else {
    // ATSINSmove_void
  } // endif
  tmp45 = check_key(38);
  tmp44 = ats2jspre_eq_int0_int0(tmp45, 1);
  if(tmp44) {
    player_move(0.0, 20.000000000000000000);
  } else {
    // ATSINSmove_void
  } // endif
  tmp47 = check_key(40);
  tmp46 = ats2jspre_eq_int0_int0(tmp47, 1);
  if(tmp46) {
    tmp48 = ats2jspre_neg_double(20.000000000000000000);
    player_move(0.0, tmp48);
  } else {
    // ATSINSmove_void
  } // endif
  return/*_void*/;
} // end-of-function


function
player_move(arg0, arg1)
{
//
// knd = 0
  var tmp50
  var tmp51
  var tmp52
  var tmp53
  var tmp54
  var tmp55
  var tmp56
  var tmp57
  var tmp58
  var tmp59
  var tmp60
  var tmp61
  var tmp62
  var tmp63
  var tmp64
  var tmp65
  var tmp66
//
  // __patsflab_player_move
  tmp50 = ats2jspre_eq_double_double(arg0, 0.0);
  if(tmp50) {
    tmp51 = player_getPosition_Y();
    tmp54 = ats2jspre_add_double_double(tmp51, arg1);
    tmp53 = ats2jspre_gt_double_double(tmp54, 500.000000000000000000);
    if(tmp53) {
      tmp52 = true;
    } else {
      tmp55 = ats2jspre_add_double_double(tmp51, arg1);
      tmp56 = ats2jspre_div_double_double(18.000000000000000000, 2.0);
      tmp52 = ats2jspre_lte_double_double(tmp55, tmp56);
    } // endif
    if(tmp52) {
      // ATSINSmove_void
    } else {
      tmp57 = ats2jspre_add_double_double(tmp51, arg1);
      player_setPosition_Y(tmp57);
    } // endif
  } else {
    tmp58 = player_getPosition_X();
    tmp61 = ats2jspre_add_double_double(tmp58, arg0);
    tmp63 = ats2jspre_div_double_int(18.000000000000000000, 2);
    tmp62 = ats2jspre_sub_double_double(400.000000000000000000, tmp63);
    tmp60 = ats2jspre_gt_double_double(tmp61, tmp62);
    if(tmp60) {
      tmp59 = true;
    } else {
      tmp64 = ats2jspre_add_double_double(tmp58, arg0);
      tmp65 = ats2jspre_div_double_int(18.000000000000000000, 2);
      tmp59 = ats2jspre_lt_double_double(tmp64, tmp65);
    } // endif
    if(tmp59) {
      // ATSINSmove_void
    } else {
      tmp66 = ats2jspre_add_double_double(tmp58, arg0);
      player_setPosition_X(tmp66);
    } // endif
  } // endif
  return/*_void*/;
} // end-of-function


function
game_tick(arg0)
{
//
// knd = 0
//
  // __patsflab_game_tick
  enemy_update(arg0);
  score_update(arg0);
  player_update(arg0);
  return/*_void*/;
} // end-of-function


function
player_update(arg0)
{
//
// knd = 0
//
  // __patsflab_player_update
  player_keyPress();
  return/*_void*/;
} // end-of-function


function
enemy_update(arg0)
{
//
// knd = 0
  var tmp72
  var tmp73
//
  // __patsflab_enemy_update
  tmp72 = enemy_get(arg0);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab0
      if(ATSCKptriscons(tmp72)) { tmplab_js = 4; break; }
      case 2: // __atstmplab1
      // ATSINSmove_void
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab2
      if(ATSCKptrisnull(tmp72)) ATSINScaseof_fail("/home/grad3/gladius/CS520/hwtest/SpaceInvaders/myGame.dats: 2819(line=129, offs=3) -- 2963(line=136, offs=6)");
      case 4: // __atstmplab3
      tmp73 = create_enemy();
      set_enemy_animation(tmp73);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
set_enemy_animation(arg0)
{
//
// knd = 0
  var tmp75
  var tmp76
  var tmp77
  var tmp78
  var tmp79
  var tmp80
  var tmp81
//
  // __patsflab_set_enemy_animation
  tmp75 = player_getPosition_X();
  tmp76 = player_getPosition_Y();
  tmp77 = enemy_getPosition_X(arg0);
  tmp78 = enemy_getPosition_Y(arg0);
  tmp79 = ats2jspre_sub_double_double(tmp75, tmp77);
  tmp80 = ats2jspre_sub_double_double(tmp76, tmp78);
  tmp81 = ats2jspre_div_double_double(tmp79, tmp80);
  test(tmp79, tmp80);
  enemy_move(arg0, tmp81, 1.0, __patsfun_10__closurerize(arg0));
  return/*_void*/;
} // end-of-function


function
__patsfun_10(env0)
{
//
// knd = 0
//
  // __patsflab___patsfun_10
  player_crash(env0);
  return/*_void*/;
} // end-of-function


function
player_crash(arg0)
{
//
// knd = 0
  var tmp86
//
  // __patsflab_player_crash
  enemy_remove(arg0);
  tmp86 = _057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_sats__player_get();
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab4
      if(ATSCKptriscons(tmp86)) { tmplab_js = 4; break; }
      case 2: // __atstmplab5
      // ATSINSmove_void
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab6
      if(ATSCKptrisnull(tmp86)) ATSINScaseof_fail("/home/grad3/gladius/CS520/hwtest/SpaceInvaders/myGame.dats: 3568(line=161, offs=3) -- 3659(line=163, offs=18)");
      case 4: // __atstmplab7
      // ATSINSmove_void
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
enemy_move(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmp88
  var tmp89
  var tmp90
  var tmp91
  var tmp93
  var tmp94
//
  // __patsflab_enemy_move
  tmp88 = enemy_getPosition_X(arg0);
  tmp89 = enemy_getPosition_Y(arg0);
  tmp90 = ats2jspre_add_double_double(tmp88, arg1);
  tmp91 = ats2jspre_add_double_double(tmp89, arg2);
  enemy_setPosition(arg0, tmp90, tmp91);
  tmp93 = enemy_check_crash(arg0, tmp90, tmp91);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab8
      if(!ATSCKpat_int(tmp93, 1)) { tmplab_js = 3; break; }
      case 2: // __atstmplab9
      arg3[0](arg3);
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab10
      if(!ATSCKpat_int(tmp93, 0)) ATSINScaseof_fail("/home/grad3/gladius/CS520/hwtest/SpaceInvaders/myGame.dats: 4003(line=175, offs=3) -- 4297(line=183, offs=6)");
      case 4: // __atstmplab11
      tmp94 = enemy_check_bound(arg0, tmp90, tmp91);
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab12
          if(!ATSCKpat_int(tmp94, 1)) { tmplab_js = 3; break; }
          case 2: // __atstmplab13
          enemy_remove(arg0);
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab14
          if(!ATSCKpat_int(tmp94, 0)) ATSINScaseof_fail("/home/grad3/gladius/CS520/hwtest/SpaceInvaders/myGame.dats: 4142(line=180, offs=5) -- 4285(line=182, offs=85)");
          case 4: // __atstmplab15
          setTimeout_cloref(__patsfun_13__closurerize(arg0, arg1, arg2, arg3), 5.0);
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
__patsfun_13(env0, env1, env2, env3)
{
//
// knd = 0
//
  // __patsflab___patsfun_13
  enemy_move(env0, env1, env2, env3);
  return/*_void*/;
} // end-of-function


function
enemy_check_crash(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret96
  var tmp97
  var tmp98
  var tmp99
  var tmp100
  var tmp101
  var tmp102
  var tmp103
  var tmp104
//
  // __patsflab_enemy_check_crash
  tmp97 = player_getPosition_X();
  tmp98 = player_getPosition_Y();
  tmp99 = enemy_getPosition_X(arg0);
  tmp100 = enemy_getPosition_Y(arg0);
  tmp101 = calc_dist(tmp97, tmp98, tmp99, tmp100);
  tmp103 = ats2jspre_add_double_double(18.000000000000000000, 18.000000000000000000);
  tmp102 = ats2jspre_div_double_double(tmp103, 2.0);
  tmp104 = ats2jspre_lt_double_double(tmp101, tmp102);
  if(tmp104) {
    tmpret96 = 1;
  } else {
    tmpret96 = 0;
  } // endif
  return tmpret96;
} // end-of-function


function
enemy_check_bound(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret105
  var tmp106
  var tmp107
  var tmp108
  var tmp109
//
  // __patsflab_enemy_check_bound
  tmp109 = ats2jspre_gt_double_double(arg1, 400.000000000000000000);
  if(tmp109) {
    tmp108 = true;
  } else {
    tmp108 = ats2jspre_lt_double_double(arg1, 0.0);
  } // endif
  if(tmp108) {
    tmp107 = true;
  } else {
    tmp107 = ats2jspre_gt_double_double(arg2, 500.000000000000000000);
  } // endif
  if(tmp107) {
    tmp106 = true;
  } else {
    tmp106 = ats2jspre_lt_double_double(arg2, 0.0);
  } // endif
  if(tmp106) {
    tmpret105 = 1;
  } else {
    tmpret105 = 0;
  } // endif
  return tmpret105;
} // end-of-function


function
cloref_app(arg0)
{
//
// knd = 0
//
  // __patsflab_cloref_app
  arg0[0](arg0);
  return/*_void*/;
} // end-of-function

// dynloadflag_init
var _057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynloadflag = 0;

function
_057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynload()
{
//
// knd = 0
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynloadflag(230))
  if(ATSCKiseqz(_057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynloadflag)) {
    _057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynloadflag = 1 ; // flag is set
    statmp0 = ats2jspre_ref(3);
    statmp1 = ats2jspre_ref(0);
    statmp2 = store_init();
    statmp3 = ats2jspre_ref(statmp2);
    statmp4 = ats2jspre_ref(800);
    statmp5 = ats2jspre_ref(10);
    init_0();
  } // endif
  return/*_void*/;
} // end-of-function


function
my_dynload()
{
//
// knd = 0
//
  _057_home_057_grad3_057_gladius_057_CS520_057_hwtest_057_SpaceInvaders_057_myGame_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ATSextcode_beg() */
function
ATS_start()
{
  var _ = my_dynload();
}

function
test(x, y){
  console.log(x + ", " + y);
}

function
setTimeout_cloref(fwork, ntime)
{
  setTimeout(function(){cloref_app(fwork);return;}, ntime);
}
/* ATSextcode_end() */

/* ****** ****** */

/* end-of-compilation-unit */
